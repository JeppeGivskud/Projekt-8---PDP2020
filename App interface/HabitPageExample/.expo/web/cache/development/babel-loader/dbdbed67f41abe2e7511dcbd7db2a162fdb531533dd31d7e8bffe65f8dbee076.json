{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Pushable() {\n  var _useState = useState(\"rgb(0, 0, 0)\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    color = _useState2[0],\n    setColor = _useState2[1];\n  var generateColor = function generateColor() {\n    var r = generateRandomNumber();\n    var g = generateRandomNumber();\n    var b = generateRandomNumber();\n    var colorvalue = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    setColor(colorvalue);\n  };\n  var generateRandomNumber = function generateRandomNumber() {\n    var min = 1;\n    var max = 255;\n    var number = Math.floor(Math.random() * (max - min + 1)) + min;\n    return number;\n  };\n  return _jsx(TouchableOpacity, {\n    style: {\n      backgroundColor: \"blue\",\n      padding: 10,\n      borderRadius: 5,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: _jsx(View, {\n      onLayout: function onLayout() {\n        return generateColor();\n      },\n      style: {\n        backgroundColor: color,\n        flex: 1,\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: \" \"\n    })\n  });\n}","map":{"version":3,"names":["useState","jsx","_jsx","Pushable","_useState","_useState2","_slicedToArray","color","setColor","generateColor","r","generateRandomNumber","g","b","colorvalue","min","max","number","Math","floor","random","TouchableOpacity","style","backgroundColor","padding","borderRadius","alignItems","justifyContent","children","View","onLayout","flex","width","height"],"sources":["/Users/jeppegivskud/Documents/Programmering/VSCODE/Projekt8/Projekt-8-PDP2020/App interface/HabitPageExample/components/TestComponents/Buttonmaker.js"],"sourcesContent":["import { View, Button, Text, TouchableOpacity } from \"react-native\";\nimport { useState } from \"react\";\n\nexport default function Pushable() {\n  const [color, setColor] = useState(\"rgb(0, 0, 0)\");\n\n  const generateColor = () => {\n    let r = generateRandomNumber();\n    let g = generateRandomNumber();\n    let b = generateRandomNumber();\n    //\"rgba(1, 2, 4, 0.5)\"\n    let colorvalue = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    setColor(colorvalue);\n  };\n\n  const generateRandomNumber = () => {\n    const min = 1;\n    const max = 255;\n    const number = Math.floor(Math.random() * (max - min + 1)) + min;\n    return number;\n  };\n\n  return (\n    <TouchableOpacity\n      style={{\n        backgroundColor: \"blue\",\n        padding: 10,\n        borderRadius: 5,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <View\n        onLayout={() => generateColor()}\n        style={{\n          backgroundColor: color,\n          flex: 1,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        {\" \"}\n      </View>\n    </TouchableOpacity>\n  );\n}\n"],"mappings":";;;;;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjC,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,IAAAC,SAAA,GAA0BJ,QAAQ,CAAC,cAAc,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1B,IAAIC,CAAC,GAAGC,oBAAoB,CAAC,CAAC;IAC9B,IAAIC,CAAC,GAAGD,oBAAoB,CAAC,CAAC;IAC9B,IAAIE,CAAC,GAAGF,oBAAoB,CAAC,CAAC;IAE9B,IAAIG,UAAU,GAAG,MAAM,GAAGJ,CAAC,GAAG,GAAG,GAAGE,CAAC,GAAG,GAAG,GAAGC,CAAC,GAAG,GAAG;IACrDL,QAAQ,CAACM,UAAU,CAAC;EACtB,CAAC;EAED,IAAMH,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IACjC,IAAMI,GAAG,GAAG,CAAC;IACb,IAAMC,GAAG,GAAG,GAAG;IACf,IAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIJ,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;IAChE,OAAOE,MAAM;EACf,CAAC;EAED,OACEf,IAAA,CAACmB,gBAAgB;IACfC,KAAK,EAAE;MACLC,eAAe,EAAE,MAAM;MACvBC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,CAAC;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IAClB,CAAE;IAAAC,QAAA,EAEF1B,IAAA,CAAC2B,IAAI;MACHC,QAAQ,EAAE,SAAAA,SAAA;QAAA,OAAMrB,aAAa,CAAC,CAAC;MAAA,CAAC;MAChCa,KAAK,EAAE;QACLC,eAAe,EAAEhB,KAAK;QACtBwB,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;MACV,CAAE;MAAAL,QAAA,EAED;IAAG,CACA;EAAC,CACS,CAAC;AAEvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Pushable() {\n  var _useState = useState(\"rgb(0, 0, 0)\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    color = _useState2[0],\n    setColor = _useState2[1];\n  var generateColor = function generateColor() {\n    var r = generateRandomNumber();\n    var g = generateRandomNumber();\n    var b = generateRandomNumber();\n    var colorvalue = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    setColor(colorvalue);\n  };\n  var generateRandomNumber = function generateRandomNumber() {\n    var min = 1;\n    var max = 255;\n    var number = Math.floor(Math.random() * (max - min + 1)) + min;\n    return number;\n  };\n  return _jsx(View, {\n    onLayout: function onLayout() {\n      return generateColor();\n    },\n    style: {\n      maxWidth: Dimensions.get(\"window\").width / 2,\n      flex: 1\n    },\n    children: _jsx(TouchableOpacity, {\n      style: {\n        flex: 1,\n        backgroundColor: color,\n        backgroundColor: \"#f2f2f2\",\n        minWidth: 150,\n        padding: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      onPress: function onPress() {\n        return generateColor(), console.log(color);\n      },\n      children: _jsx(Text, {\n        children: \"I am a button\"\n      })\n    })\n  });\n}","map":{"version":3,"names":["useState","jsx","_jsx","Pushable","_useState","_useState2","_slicedToArray","color","setColor","generateColor","r","generateRandomNumber","g","b","colorvalue","min","max","number","Math","floor","random","View","onLayout","style","maxWidth","Dimensions","get","width","flex","children","TouchableOpacity","backgroundColor","minWidth","padding","justifyContent","alignItems","onPress","console","log","Text"],"sources":["/Users/jeppegivskud/Documents/Programmering/VSCODE/Projekt8/Projekt-8-PDP2020/App interface/HabitPageExample/components/TestComponents/Buttonmaker.js"],"sourcesContent":["import { View, Button, Text, TouchableOpacity, Dimensions } from \"react-native\";\nimport { useState } from \"react\";\n\nexport default function Pushable() {\n  const [color, setColor] = useState(\"rgb(0, 0, 0)\");\n\n  const generateColor = () => {\n    let r = generateRandomNumber();\n    let g = generateRandomNumber();\n    let b = generateRandomNumber();\n    //\"rgba(1, 2, 4, 0.5)\"\n    let colorvalue = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    setColor(colorvalue);\n  };\n\n  const generateRandomNumber = () => {\n    const min = 1;\n    const max = 255;\n    const number = Math.floor(Math.random() * (max - min + 1)) + min;\n    return number;\n  };\n\n  return (\n    <View\n      onLayout={() => generateColor()}\n      style={{\n        maxWidth: Dimensions.get(\"window\").width / 2,\n        flex: 1,\n      }}\n    >\n      <TouchableOpacity\n        style={{\n          flex: 1,\n          backgroundColor: color,\n          backgroundColor: \"#f2f2f2\",\n          minWidth: 150,\n\n          padding: 10,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        onPress={() => (generateColor(), console.log(color))}\n      >\n        <Text>I am a button</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n"],"mappings":";;;;;;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjC,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,IAAAC,SAAA,GAA0BJ,QAAQ,CAAC,cAAc,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1B,IAAIC,CAAC,GAAGC,oBAAoB,CAAC,CAAC;IAC9B,IAAIC,CAAC,GAAGD,oBAAoB,CAAC,CAAC;IAC9B,IAAIE,CAAC,GAAGF,oBAAoB,CAAC,CAAC;IAE9B,IAAIG,UAAU,GAAG,MAAM,GAAGJ,CAAC,GAAG,GAAG,GAAGE,CAAC,GAAG,GAAG,GAAGC,CAAC,GAAG,GAAG;IACrDL,QAAQ,CAACM,UAAU,CAAC;EACtB,CAAC;EAED,IAAMH,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IACjC,IAAMI,GAAG,GAAG,CAAC;IACb,IAAMC,GAAG,GAAG,GAAG;IACf,IAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIJ,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;IAChE,OAAOE,MAAM;EACf,CAAC;EAED,OACEf,IAAA,CAACmB,IAAI;IACHC,QAAQ,EAAE,SAAAA,SAAA;MAAA,OAAMb,aAAa,CAAC,CAAC;IAAA,CAAC;IAChCc,KAAK,EAAE;MACLC,QAAQ,EAAEC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK,GAAG,CAAC;MAC5CC,IAAI,EAAE;IACR,CAAE;IAAAC,QAAA,EAEF3B,IAAA,CAAC4B,gBAAgB;MACfP,KAAK,EAAE;QACLK,IAAI,EAAE,CAAC;QACPG,eAAe,EAAExB,KAAK;QACtBwB,eAAe,EAAE,SAAS;QAC1BC,QAAQ,EAAE,GAAG;QAEbC,OAAO,EAAE,EAAE;QACXC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MACFC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAO3B,aAAa,CAAC,CAAC,EAAE4B,OAAO,CAACC,GAAG,CAAC/B,KAAK,CAAC;MAAA,CAAE;MAAAsB,QAAA,EAErD3B,IAAA,CAACqC,IAAI;QAAAV,QAAA,EAAC;MAAa,CAAM;IAAC,CACV;EAAC,CACf,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}
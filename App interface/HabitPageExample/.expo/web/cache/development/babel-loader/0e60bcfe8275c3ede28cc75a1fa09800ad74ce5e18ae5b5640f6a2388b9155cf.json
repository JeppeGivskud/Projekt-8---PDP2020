{"ast":null,"code":"import Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport HabitBox from \"./HabitBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HabitPage() {\n  var inputdata = [{\n    color: \"tomato\",\n    name: \"Ostesovs\",\n    type: \"Morning\",\n    count: 1\n  }, {\n    color: \"blue\",\n    name: \"Ostesovs\",\n    type: \"Morning\",\n    count: 2\n  }, {\n    color: \"navy\",\n    name: \"Ostesovs\",\n    type: \"Morning\",\n    count: 3\n  }, {\n    color: \"green\",\n    name: \"Ostesovs\",\n    type: \"Midday\",\n    count: 4\n  }, {\n    color: \"red\",\n    name: \"Ostesovs\",\n    type: \"Midday\",\n    count: 5\n  }, {\n    color: \"rgb(200,0,200)\",\n    name: \"Ostesovs\",\n    type: \"Midday\",\n    count: 6\n  }, {\n    color: \"rgb(0,200,200)\",\n    name: \"Ostesovs\",\n    type: \"Midday\",\n    count: 7\n  }, {\n    color: \"rgb(200,200,0)\",\n    name: \"Ostesovs\",\n    type: \"Afternoon\",\n    count: 8\n  }, {\n    color: \"rgb(100,0,100)\",\n    name: \"Ostesovs\",\n    type: \"Afternoon\",\n    count: 9\n  }, {\n    color: \"rgb(0,200,100)\",\n    name: \"Ostesovs\",\n    type: \"Afternoon\",\n    count: 10\n  }, {\n    color: \"rgb(200,0,100)\",\n    name: \"Ostesovs\",\n    type: \"Afternoon\",\n    count: 11\n  }, {\n    color: \"rgb(100,0,200)\",\n    name: \"Ostesovs\",\n    type: \"Afternoon\",\n    count: 12\n  }];\n  var sectionData = [{\n    title: \"Morning\",\n    data: [inputdata.slice(0, 3)]\n  }, {\n    title: \"Midday\",\n    data: [{\n      color: \"green\",\n      name: \"Ostesovs\",\n      count: 4\n    }, {\n      color: \"red\",\n      name: \"Ostesovs\",\n      count: 5\n    }, {\n      color: \"rgb(200,0,200)\",\n      name: \"Ostesovs\",\n      count: 6\n    }]\n  }, {\n    title: \"Afternoon\",\n    data: [{\n      color: \"rgb(0,200,200)\",\n      name: \"Ostesovs\",\n      count: 7\n    }, {\n      color: \"rgb(200,200,0)\",\n      name: \"Ostesovs\",\n      count: 8\n    }, {\n      color: \"rgb(0,200,100)\",\n      name: \"Ostesovs\",\n      count: 10\n    }]\n  }, {\n    title: \"Night\",\n    data: [{\n      color: \"rgb(100,0,100)\",\n      name: \"Ostesovs\",\n      count: 9\n    }, {\n      color: \"rgb(200,0,100)\",\n      name: \"Ostesovs\",\n      count: 11\n    }, {\n      color: \"rgb(100,0,200)\",\n      name: \"Ostesovs\",\n      count: 12\n    }]\n  }];\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(StatusBar, {}), _jsx(SectionList, {\n      sections: sectionData,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(HabitBox, {\n          color: item.color,\n          name: item.name,\n          count: item.count\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref2) {\n        var title = _ref2.section.title;\n        return _jsx(Text, {\n          style: {\n            fontSize: 32\n          },\n          children: title\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    flexWrap: \"wrap\"\n  },\n  scrollview: {\n    justifyContent: \"flex-start\",\n    flexDirection: \"row\",\n    gap: 20\n  }\n});\nexport default HabitPage;","map":{"version":3,"names":["HabitBox","jsx","_jsx","jsxs","_jsxs","HabitPage","inputdata","color","name","type","count","sectionData","title","data","slice","View","style","flex","children","StatusBar","SectionList","sections","renderItem","_ref","item","renderSectionHeader","_ref2","section","Text","fontSize","styles","StyleSheet","create","container","flexDirection","justifyContent","flexWrap","scrollview","gap"],"sources":["/Users/jeppegivskud/Documents/Programmering/VSCODE/Projekt8/Projekt-8-PDP2020/App interface/HabitPageExample/components/HabitPage.js"],"sourcesContent":["import {\n    Button,\n    StyleSheet,\n    Text,\n    View,\n    ScrollView,\n    SafeAreaView,\n    StatusBar,\n    Dimensions,\n    FlatList,\n    SectionList,\n} from \"react-native\";\nimport HabitBox from \"./HabitBox\";\n\n// TODO: The scrollable should keep scrolling for a little longer\nfunction HabitPage() {\n    const inputdata = [\n        { color: \"tomato\", name: \"Ostesovs\", type: \"Morning\", count: 1 },\n        { color: \"blue\", name: \"Ostesovs\", type: \"Morning\", count: 2 },\n        { color: \"navy\", name: \"Ostesovs\", type: \"Morning\", count: 3 },\n        { color: \"green\", name: \"Ostesovs\", type: \"Midday\", count: 4 },\n        { color: \"red\", name: \"Ostesovs\", type: \"Midday\", count: 5 },\n        { color: \"rgb(200,0,200)\", name: \"Ostesovs\", type: \"Midday\", count: 6 },\n        { color: \"rgb(0,200,200)\", name: \"Ostesovs\", type: \"Midday\", count: 7 },\n        { color: \"rgb(200,200,0)\", name: \"Ostesovs\", type: \"Afternoon\", count: 8 },\n        { color: \"rgb(100,0,100)\", name: \"Ostesovs\", type: \"Afternoon\", count: 9 },\n        { color: \"rgb(0,200,100)\", name: \"Ostesovs\", type: \"Afternoon\", count: 10 },\n        { color: \"rgb(200,0,100)\", name: \"Ostesovs\", type: \"Afternoon\", count: 11 },\n        { color: \"rgb(100,0,200)\", name: \"Ostesovs\", type: \"Afternoon\", count: 12 },\n    ];\n\n    const sectionData = [\n        {\n            title: \"Morning\",\n            data: [inputdata.slice(0, 3)],\n        },\n        {\n            title: \"Midday\",\n            data: [\n                { color: \"green\", name: \"Ostesovs\", count: 4 },\n                { color: \"red\", name: \"Ostesovs\", count: 5 },\n                { color: \"rgb(200,0,200)\", name: \"Ostesovs\", count: 6 },\n            ],\n        },\n        {\n            title: \"Afternoon\",\n            data: [\n                { color: \"rgb(0,200,200)\", name: \"Ostesovs\", count: 7 },\n                { color: \"rgb(200,200,0)\", name: \"Ostesovs\", count: 8 },\n                { color: \"rgb(0,200,100)\", name: \"Ostesovs\", count: 10 },\n            ],\n        },\n        {\n            title: \"Night\",\n            data: [\n                { color: \"rgb(100,0,100)\", name: \"Ostesovs\", count: 9 },\n                { color: \"rgb(200,0,100)\", name: \"Ostesovs\", count: 11 },\n                { color: \"rgb(100,0,200)\", name: \"Ostesovs\", count: 12 },\n            ],\n        },\n    ];\n    return (\n        <View style={{ flex: 1 }}>\n            <StatusBar />\n            {/* <FlatList\n                data={inputdata}\n                renderItem={({ item }) => <HabitBox color={item.color} name={item.name} count={item.count} />}\n            /> */}\n            <SectionList\n                sections={sectionData}\n                renderItem={({ item }) => <HabitBox color={item.color} name={item.name} count={item.count} />}\n                renderSectionHeader={({ section: { title } }) => (\n                    <Text style={{ fontSize: 32 }}>{title}</Text>\n                )}\n            />\n            {/* <ScrollView\n                style={{ flex: 1 }}\n                contentContainerStyle={styles.scrollview}\n            >\n                <View style={styles.container}>\n                    <HabitBoxes style={styles.container} />\n                </View>\n            </ScrollView> */}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        flexWrap: \"wrap\",\n    },\n    scrollview: {\n        justifyContent: \"flex-start\",\n        flexDirection: \"row\",\n        gap: 20,\n    },\n});\nexport default HabitPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}